# This is a configuration file for Zabbix agent 2 (Unix)
# To get more information about Zabbix, visit http://www.zabbix.com

############ GENERAL PARAMETERS #################

### Option: PidFile
#	Name of PID file.
#
# Mandatory: no
# Default:
# PidFile=/tmp/zabbix_agent2.pid

<% if $zabbix::agent2::pid_file { -%>
PidFile=<%= $zabbix::agent2::pid_file %>
<% } -%>

### Option: LogType
#	Specifies where log messages are written to:
#		system  - syslog
#		file    - file specified with LogFile parameter
#		console - standard output
#
# Mandatory: no
# Default:
# LogType=file
<% if $zabbix::agent2::log_type { -%>
LogType=<%= $zabbix::agent2::log_type %>
<% } -%>

### Option: LogFile
#	Log file name for LogType 'file' parameter.
#
# Mandatory: yes, if LogType is set to file, otherwise no
# Default:
# LogFile=/tmp/zabbix_agent2.log

<% if $zabbix::agent2::log_file { -%>
LogFile=<%= $zabbix::agent2::log_file %>
<% } -%>

### Option: LogFileSize
#	Maximum size of log file in MB.
#	0 - disable automatic log rotation.
#
# Mandatory: no
# Range: 0-1024
# Default:
# LogFileSize=1

<% if $zabbix::agent2::log_file_size { -%>
LogFileSize=<%= $zabbix::agent2::log_file_size %>
<% } -%>

### Option: DebugLevel
#	Specifies debug level:
#	0 - basic information about starting and stopping of Zabbix processes
#	1 - critical information
#	2 - error information
#	3 - warnings
#	4 - for debugging (produces lots of information)
#	5 - extended debugging (produces even more information)
#
# Mandatory: no
# Range: 0-5
# Default:
# DebugLevel=3
<% if $zabbix::agent2::debug_level { -%>
DebugLevel=<%= $zabbix::agent2::debug_level %>
<% } -%>

### Option: SourceIP
#	Source IP address for outgoing connections.
#
# Mandatory: no
# Default:
# SourceIP=
<% if $zabbix::agent2::source_ip { -%>
SourceIP=<%= $zabbix::agent2::source_ip %>
<% } -%>

##### Passive checks related

### Option: Server
#	List of comma delimited IP addresses, optionally in CIDR notation, or DNS names of Zabbix servers and Zabbix proxies.
#	Incoming connections will be accepted only from the hosts listed here.
#	If IPv6 support is enabled then '127.0.0.1', '::127.0.0.1', '::ffff:127.0.0.1' are treated equally
#	and '::/0' will allow any IPv4 or IPv6 address.
#	'0.0.0.0/0' can be used to allow any IPv4 address.
#	Example: Server=127.0.0.1,192.168.1.0/24,::1,2001:db8::/32,zabbix.example.com
#
#   If left empty or not set will disable passive checks, and Zabbix agent 2 will not listen on the ListenPort.
#
# Mandatory: no
# Default:
# Server=

<% if $zabbix::agent2::server =~ Array { -%>
Server=<%= $zabbix::agent2::server.flatten.join(',') %>
<% } elsif $zabbix::agent2::server { -%>
Server=<%= $zabbix::agent2::server %>
<% } -%>

### Option: ListenPort
#	Agent will listen on this port for connections from the server.
#
# Mandatory: no
# Range: 1024-32767
# Default:
# ListenPort=10050
<% if $zabbix::agent2::listen_port { -%>
ListenPort=<%= $zabbix::agent2::listen_port %>
<% } -%>

### Option: ListenIP
#	List of comma delimited IP addresses that the agent should listen on.
#	First IP address is sent to Zabbix server if connecting to it to retrieve list of active checks.
#
# Mandatory: no
# Default:
# ListenIP=0.0.0.0
<% if $zabbix::agent2::listen_ip =~ Array { -%>
ListenIP=<%= $zabbix::agent2::listen_ip.flatten.join(',') %>
<% } elsif $zabbix::agent2::listen_ip { -%>
ListenIP=<%= $zabbix::agent2::listen_ip %>
<% } -%>

### Option: StatusPort
#	Agent will listen on this port for HTTP status requests.
#
# Mandatory: no
# Range: 1024-32767
# Default:
# StatusPort=
<% if $zabbix::agent2::status_port { -%>
StatusPort=<%= $zabbix::agent2::status_port %>
<% } -%>

##### Active checks related

### Option: ServerActive
#	Zabbix server/proxy address or cluster configuration to get active checks from.
#	Server/proxy address is IP address or DNS name and optional port separated by colon.
#	Cluster configuration is one or more server addresses separated by semicolon.
#	Multiple Zabbix servers/clusters and Zabbix proxies can be specified, separated by comma.
#	More than one Zabbix proxy should not be specified from each Zabbix server/cluster.
#	If Zabbix proxy is specified then Zabbix server/cluster for that proxy should not be specified.
#	Multiple comma-delimited addresses can be provided to use several independent Zabbix servers in parallel. Spaces are allowed.
#	If port is not specified, default port is used.
#	IPv6 addresses must be enclosed in square brackets if port for that host is specified.
#	If port is not specified, square brackets for IPv6 addresses are optional.
#	If this parameter is not specified, active checks are disabled.
#	Example for Zabbix proxy:
#		ServerActive=127.0.0.1:10051
#	Example for multiple servers:
#		ServerActive=127.0.0.1:20051,zabbix.domain,[::1]:30051,::1,[12fc::1]
#	Example for high availability:
#		ServerActive=zabbix.cluster.node1;zabbix.cluster.node2:20051;zabbix.cluster.node3
#	Example for high availability with two clusters and one server:
#		ServerActive=zabbix.cluster.node1;zabbix.cluster.node2:20051,zabbix.cluster2.node1;zabbix.cluster2.node2,zabbix.domain
#
# Mandatory: no
# Default:
# ServerActive=

<% if $zabbix::agent2::server_active =~ Array { -%>
ServerActive=<%= $zabbix::agent2::server_active.flatten.join(',') %>
<% } elsif $zabbix::agent2::server_active { -%>
ServerActive=<%= $zabbix::agent2::server_active %>
<% } -%>

### Option: Hostname
#	List of comma delimited unique, case sensitive hostnames.
#	Required for active checks and must match hostnames as configured on the server.
#	Value is acquired from HostnameItem if undefined.
#
# Mandatory: no
# Default:
# Hostname=

<% if $zabbix::agent2::hostname =~ Array { -%>
Hostname=<%= $zabbix::agent2::hostname.flatten.join(',') %>
<% } elsif $zabbix::agent2::hostname { -%>
Hostname=<%= $zabbix::agent2::hostname %>
<% } -%>

### Option: HostnameItem
#	Item used for generating Hostname if it is undefined. Ignored if Hostname is defined.
#	Does not support UserParameters or aliases.
#
# Mandatory: no
# Default:
# HostnameItem=system.hostname
<% if $zabbix::agent2::hostname_item { -%>
HostnameItem=<%= $zabbix::agent2::hostname_item %>
<% } -%>

### Option: HostMetadata
#	Optional parameter that defines host metadata.
#	Host metadata is used at host auto-registration process.
#	An agent will issue an error and not start if the value is over limit of 255 characters.
#	If not defined, value will be acquired from HostMetadataItem.
#
# Mandatory: no
# Range: 0-255 characters
# Default:
# HostMetadata=
<% if $zabbix::agent2::host_metadata =~ Array { -%>
HostMetadata=<%= $zabbix::agent2::host_metadata.flatten.join(',') %>
<% } elsif $zabbix::agent2::host_metadata { -%>
HostMetadata=<%= $zabbix::agent2::host_metadata %>
<% } -%>

### Option: HostMetadataItem
#	Optional parameter that defines an item used for getting host metadata.
#	Host metadata is used at host auto-registration process.
#	During an auto-registration request an agent will log a warning message if
#	the value returned by specified item is over limit of 255 characters.
#	This option is only used when HostMetadata is not defined.
#
# Mandatory: no
# Default:
# HostMetadataItem=
<% if $zabbix::agent2::host_metadata_item { -%>
HostMetadataItem=<%= $zabbix::agent2::host_metadata_item %>
<% } -%>

### Option: HostInterface
#	Optional parameter that defines host interface.
#	Host interface is used at host auto-registration process.
#	An agent will issue an error and not start if the value is over limit of 255 characters.
#	If not defined, value will be acquired from HostInterfaceItem.
#
# Mandatory: no
# Range: 0-255 characters
# Default:
# HostInterface=
<% if $zabbix::agent2::host_interface { -%>
HostInterface=<%= $zabbix::agent2::host_interface %>
<% } -%>

### Option: HostInterfaceItem
#	Optional parameter that defines an item used for getting host interface.
#	Host interface is used at host auto-registration process.
#	During an auto-registration request an agent will log a warning message if
#	the value returned by specified item is over limit of 255 characters.
#	This option is only used when HostInterface is not defined.
#
# Mandatory: no
# Default:
# HostInterfaceItem=
<% if $zabbix::agent2::host_interface_item { -%>
HostInterfaceItem=<%= $zabbix::agent2::host_interface_item %>
<% } -%>

### Option: RefreshActiveChecks
#	How often list of active checks is refreshed, in seconds.
#
# Mandatory: no
# Range: 60-3600
# Default:
# RefreshActiveChecks=120
<% if $zabbix::agent2::refresh_active_checks { -%>
RefreshActiveChecks=<%= $zabbix::agent2::refresh_active_checks %>
<% } -%>

### Option: BufferSend
#	Do not keep data longer than N seconds in buffer.
#
# Mandatory: no
# Range: 1-3600
# Default:
# BufferSend=5
<% if $zabbix::agent2::buffer_send { -%>
BufferSend=<%= $zabbix::agent2::buffer_send %>
<% } -%>

### Option: BufferSize
#	Maximum number of values in a memory buffer. The agent will send
#	all collected data to Zabbix Server or Proxy if the buffer is full.
#	Option is not valid if EnablePersistentBuffer=1
#
# Mandatory: no
# Range: 2-65535
# Default:
# BufferSize=100
<% if $zabbix::agent2::buffer_size { -%>
BufferSize=<%= $zabbix::agent2::buffer_size %>
<% } -%>

### Option: EnablePersistentBuffer
#	Enable usage of local persistent storage for active items.
#	0 - disabled, in-memory buffer is used (default); 1 - use persistent buffer
# Mandatory: no
# Range: 0-1
# Default:
# EnablePersistentBuffer=0
<% if $zabbix::agent2::enable_persistent_buffer { -%>
EnablePersistentBuffer=<%= $zabbix::agent2::enable_persistent_buffer %>
<% } -%>

### Option: PersistentBufferPeriod
#	Zabbix Agent2 will keep data for this time period in case of no
#	connectivity with Zabbix server or proxy. Older data will be lost. Log data will be preserved.
#	Option is valid if EnablePersistentBuffer=1
#
# Mandatory: no
# Range: 1m-365d
# Default:
# PersistentBufferPeriod=1h
<% if $zabbix::agent2::persistent_buffer_period { -%>
PersistentBufferPeriod=<%= $zabbix::agent2::persistent_buffer_period %>
<% } -%>

### Option: PersistentBufferFile
#	Full filename. Zabbix Agent2 will keep SQLite database in this file.
#	Option is valid if EnablePersistentBuffer=1
#
# Mandatory: no
# Default:
# PersistentBufferFile=
<% if $zabbix::agent2::persistent_buffer_file { -%>
PersistentBufferFile=<%= $zabbix::agent2::persistent_buffer_file %>
<% } -%>

############ ADVANCED PARAMETERS #################

### Option: Alias
#	Sets an alias for an item key. It can be used to substitute long and complex item key with a smaller and simpler one.
#	Multiple Alias parameters may be present. Multiple parameters with the same Alias key are not allowed.
#	Different Alias keys may reference the same item key.
#	For example, to retrieve the ID of user 'zabbix':
#	Alias=zabbix.userid:vfs.file.regexp[/etc/passwd,^zabbix:.:([0-9]+),,,,\1]
#	Now shorthand key zabbix.userid may be used to retrieve data.
#	Aliases can be used in HostMetadataItem but not in HostnameItem parameters.
#
# Mandatory: no
# Range:
# Default:
<% if $zabbix::agent2::alias { -%>
<% $zabbix::agent2::alias.each |$key| { -%>
Alias=<%= $key %>
<% } -%>
<% } -%>

### Option: Timeout
#	Spend no more than Timeout seconds on processing
#
# Mandatory: no
# Range: 1-30
# Default:
# Timeout=3
<% if $zabbix::agent2::timeout { -%>
Timeout=<%= $zabbix::agent2::timeout %>
<% } -%>

### Option: Include
#	You may include individual files or all files in a directory in the configuration file.
#	Installing Zabbix will create include directory in /usr/local/etc, unless modified during the compile time.
#
# Mandatory: no
# Default:
# Include=

Include=<%= $zabbix::agent2::zabbix_agent2_d %>/*.conf

# Include=/usr/local/etc/zabbix_agent2.userparams.conf
# Include=/usr/local/etc/zabbix_agent2.conf.d/
# Include=/usr/local/etc/zabbix_agent2.conf.d/*.conf

### Option:PluginTimeout
#	Timeout for connections with external plugins.
#
# Mandatory: no
# Range: 1-30
# Default: <Global timeout>
# PluginTimeout=
<% if $zabbix::agent2::plugin_timeout { -%>
PluginTimeout=<%= $zabbix::agent2::plugin_timeout %>
<% } -%>

### Option:PluginSocket
#	Path to unix socket for external plugin communications.
#
# Mandatory: no
# Default:/tmp/agent.plugin.sock
# PluginSocket=

<% if $zabbix::agent2::plugin_socket { -%>
PluginSocket=<%= $zabbix::agent2::plugin_socket %>
<% } -%>

####### USER-DEFINED MONITORED PARAMETERS #######

### Option: UnsafeUserParameters
#	Allow all characters to be passed in arguments to user-defined parameters.
#	The following characters are not allowed:
#	\ ' " ` * ? [ ] { } ~ $ ! & ; ( ) < > | # @
#	Additionally, newline characters are not allowed.
#	0 - do not allow
#	1 - allow
#
# Mandatory: no
# Range: 0-1
# Default:
# UnsafeUserParameters=0
<% if $zabbix::agent2::unsafe_user_parameters { -%>
UnsafeUserParameters=<%= $zabbix::agent2::unsafe_user_parameters %>
<% } -%>

### Option: UserParameter
#	User-defined parameter to monitor. There can be several user-defined parameters.
#	Format: UserParameter=<key>,<shell command>
#	See 'zabbix_agentd' directory for examples.
#
# Mandatory: no
# Default:
# UserParameter=
<% if $zabbix::agent2::user_parameter { -%>
<% $zabbix::agent2::user_parameter.each |$user_param| { -%>
UserParameter=<%= $user_param['key'] %>,<%= $user_param['shell_command'] %>
<% } -%>
<% } -%>

### Option: UserParameterDir
#	Directory to execute UserParameter commands from. Only one entry is allowed.
#	When executing UserParameter commands the agent will change the working directory to the one
#	specified in the UserParameterDir option.
#	This way UserParameter commands can be specified using the relative ./ prefix.
#
# Mandatory: no
# Default:
# UserParameterDir=
<% if $zabbix::agent2::user_parameter_dir { -%>
UserParameterDir=<%= $zabbix::agent2::user_parameter_dir %>
<% } -%>

### Option: ControlSocket
#	The control socket, used to send runtime commands with '-R' option.
#
# Mandatory: no
# Default:
# ControlSocket=

<% if $zabbix::agent2::control_socket { -%>
ControlSocket=<%= $zabbix::agent2::control_socket %>
<% } -%>

####### TLS-RELATED PARAMETERS #######

### Option: TLSConnect
#	How the agent should connect to server or proxy. Used for active checks.
#	Only one value can be specified:
#		unencrypted - connect without encryption
#		psk         - connect using TLS and a pre-shared key
#		cert        - connect using TLS and a certificate
#
# Mandatory: yes, if TLS certificate or PSK parameters are defined (even for 'unencrypted' connection)
# Default:
# TLSConnect=unencrypted
<% if $zabbix::agent2::tls_connect =~ Array { -%>
TLSConnect=<%= $zabbix::agent2::tls_connect.flatten.join(',') %>
<% } elsif $zabbix::agent2::tls_connect { -%>
TLSConnect=<%= $zabbix::agent2::tls_connect %>
<% } -%>

### Option: TLSAccept
#	What incoming connections to accept.
#	Multiple values can be specified, separated by comma:
#		unencrypted - accept connections without encryption
#		psk         - accept connections secured with TLS and a pre-shared key
#		cert        - accept connections secured with TLS and a certificate
#
# Mandatory: yes, if TLS certificate or PSK parameters are defined (even for 'unencrypted' connection)
# Default:
# TLSAccept=unencrypted
<% if $zabbix::agent2::tls_accept =~ Array { -%>
TLSAccept=<%= $zabbix::agent2::tls_accept.flatten.join(',') %>
<% } elsif $zabbix::agent2::tls_accept { -%>
TLSAccept=<%= $zabbix::agent2::tls_accept %>
<% } -%>

### Option: TLSCAFile
#	Full pathname of a file containing the top-level CA(s) certificates for
#	peer certificate verification.
#
# Mandatory: no
# Default:
# TLSCAFile=
<% if $zabbix::agent2::tls_ca_file { -%>
TLSCAFile=<%= $zabbix::agent2::tls_ca_file %>
<% } -%>

### Option: TLSCRLFile
#	Full pathname of a file containing revoked certificates.
#
# Mandatory: no
# Default:
# TLSCRLFile=
<% if $zabbix::agent2::tls_crl_file { -%>
TLSCRLFile=<%= $zabbix::agent2::tls_crl_file %>
<% } -%>

### Option: TLSServerCertIssuer
#		Allowed server certificate issuer.
#
# Mandatory: no
# Default:
# TLSServerCertIssuer=
<% if $zabbix::agent2::tls_server_cert_issuer { -%>
TLSServerCertIssuer=<%= $zabbix::agent2::tls_server_cert_issuer %>
<% } -%>

### Option: TLSServerCertSubject
#		Allowed server certificate subject.
#
# Mandatory: no
# Default:
# TLSServerCertSubject=
<% if $zabbix::agent2::tls_server_cert_subject { -%>
TLSServerCertSubject=<%= $zabbix::agent2::tls_server_cert_subject %>
<% } -%>

### Option: TLSCertFile
#	Full pathname of a file containing the agent certificate or certificate chain.
#
# Mandatory: no
# Default:
# TLSCertFile=
<% if $zabbix::agent2::tls_cert_file { -%>
TLSCertFile=<%= $zabbix::agent2::tls_cert_file %>
<% } -%>

### Option: TLSKeyFile
#	Full pathname of a file containing the agent private key.
#
# Mandatory: no
# Default:
# TLSKeyFile=
<% if $zabbix::agent2::tls_key_file { -%>
TLSKeyFile=<%= $zabbix::agent2::tls_key_file %>
<% } -%>

### Option: TLSPSKIdentity
#	Unique, case sensitive string used to identify the pre-shared key.
#
# Mandatory: no
# Default:
# TLSPSKIdentity=
<% if $zabbix::agent2::tls_psk_identity { -%>
TLSPSKIdentity=<%= $zabbix::agent2::tls_psk_identity %>
<% } -%>

### Option: TLSPSKFile
#	Full pathname of a file containing the pre-shared key.
#
# Mandatory: no
# Default:
# TLSPSKFile=
<% if $zabbix::agent2::tls_psk_file { -%>
TLSPSKFile=<%= $zabbix::agent2::tls_psk_file %>
<% } -%>

####### PLUGIN-SPECIFIC PARAMETERS #######

### Option: Plugins
#	A plugin can have one or more plugin specific configuration parameters in format:
#     Plugins.<PluginName>.<Parameter1>=<value1>
#     Plugins.<PluginName>.<Parameter2>=<value2>
#
# Mandatory: no
# Range:
# Default:
<% if $zabbix::agent2::plugins { -%>
<% $zabbix::agent2::plugins.each |$plugin_name, $plugin_params| { -%>
<% $plugin_params.each |$param, $value| { -%>
Plugins.<%= $plugin_name %>.<%= $param %>=<%= $value %>
<% } -%>
<% } -%>
<% } -%>

### Option: Plugins.Log.MaxLinesPerSecond
#	Maximum number of new lines the agent will send per second to Zabbix Server
#	or Proxy processing 'log' and 'logrt' active checks.
#	The provided value will be overridden by the parameter 'maxlines',
#	provided in 'log' or 'logrt' item keys.
#
# Mandatory: no
# Range: 1-1000
# Default:
# Plugins.Log.MaxLinesPerSecond=20
<% if $zabbix::agent2::plugins_log_max_lines_per_second { -%>
Plugins.Log.MaxLinesPerSecond=<%= $zabbix::agent2::plugins_log_max_lines_per_second %>
<% } -%>

### Option: AllowKey
#	Allow execution of item keys matching pattern.
#	Multiple keys matching rules may be defined in combination with DenyKey.
#	Key pattern is wildcard expression, which support "*" character to match any number of any characters in certain position. It might be used in both key name and key arguments.
#	Parameters are processed one by one according their appearance order.
#	If no AllowKey or DenyKey rules defined, all keys are allowed.
#
# Mandatory: no
<% if $zabbix::agent2::allow_key { -%>
<% $zabbix::agent2::allow_key.each |$key| { -%>
AllowKey=<%= $key %>
<% } -%>
<% } -%>

### Option: DenyKey
#	Deny execution of items keys matching pattern.
#	Multiple keys matching rules may be defined in combination with AllowKey.
#	Key pattern is wildcard expression, which support "*" character to match any number of any characters in certain position. It might be used in both key name and key arguments.
#	Parameters are processed one by one according their appearance order.
#	If no AllowKey or DenyKey rules defined, all keys are allowed.
#       Unless another system.run[*] rule is specified DenyKey=system.run[*] is added by default.
#
# Mandatory: no
# Default:
# DenyKey=system.run[*]
<% if $zabbix::agent2::deny_key { -%>
<% $zabbix::agent2::deny_key.each |$key| { -%>
DenyKey=<%= $key %>
<% } -%>
<% } -%>

### Option: Plugins.SystemRun.LogRemoteCommands
#	Enable logging of executed shell commands as warnings.
#	0 - disabled
#	1 - enabled
#
# Mandatory: no
# Default:
# Plugins.SystemRun.LogRemoteCommands=0
<% if $zabbix::agent2::plugins_system_run_log_remote_commands { -%>
Plugins.SystemRun.LogRemoteCommands=<%= $zabbix::agent2::plugins_system_run_log_remote_commands %>
<% } -%>

### Option: ForceActiveChecksOnStart
#	Perform active checks immediately after restart for first received configuration.
#	Also available as per plugin configuration, example: Plugins.Uptime.System.ForceActiveChecksOnStart=1
#
# Mandatory: no
# Range: 0-1
# Default:
# ForceActiveChecksOnStart=0
<% if $zabbix::agent2::force_active_checks_on_start { -%>
ForceActiveChecksOnStart=<%= $zabbix::agent2::force_active_checks_on_start %>
<% } -%>

# Include configuration files for plugins
<% if $zabbix::agent2::plugins_d { -%>
Include=<%= $zabbix::agent2::plugins_d %>/*.conf
<% } -%>
